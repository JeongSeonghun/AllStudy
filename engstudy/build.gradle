apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId 'com.jshstudy.allstudy'
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        config {
            keyAlias 'jshstudy'
            keyPassword 'allstudy'
            storeFile file('../keystore/keystore_allstudy.jks')
            storePassword 'allstudy'
        }

        release {
            keyAlias 'jshstudy'
            keyPassword 'allstudy'
            storeFile file('../keystore/keystore_allstudy.jks')
            storePassword 'allstudy'
        }

        freeRelease {
            keyAlias 'jshstudy'
            keyPassword 'allstudy'
            storeFile file('../keystore/keystore_allstudy.jks')
            storePassword 'allstudy'
        }

        paidRelease {
            keyAlias 'jshstudy'
            keyPassword 'allstudy'
            storeFile file('../keystore/keystore_allstudy.jks')
            storePassword 'allstudy'
        }

    }

    productFlavors {
        free {
            applicationId "com.jshstudy.allstudy.free"
            versionName defaultConfig.versionName + "-free"
        }

        paid {
            applicationId "com.jshstudy.allstudy.paid"
            versionName defaultConfig.versionName + "-paid"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            productFlavors.free.signingConfig = signingConfigs.freeRelease
            productFlavors.paid.signingConfig = signingConfigs.paidRelease
        }
        dev {
            debuggable true
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dev"
        }
        qa {
            debuggable true;
            signingConfig signingConfigs.debug
            applicationIdSuffix ".qa"
        }
    }


    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def path = rootDir.absolutePath + "/custom_out/"
            def apkName = "engstudy"

            if (variant.buildType.name == "release") {
                def date = new Date().format("yyyyMMdd")
                path += date

                apkName += "_v${variant.versionName}.apk"
            } else {
                apkName += "_${variant.buildType.name}.apk"
            }

            output.outputFile = new File(
                    path,
                    apkName
            )
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/ASL2.0'
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':common')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
